import java.io.File
import java.nio.file.{Files, Paths}
import com.amazonaws.auth.AWSStaticCredentialsProvider
import com.amazonaws.auth.BasicAWSCredentials
import com.amazonaws.client.builder.AwsClientBuilder
import com.amazonaws.services.s3.AmazonS3
import com.amazonaws.services.s3.AmazonS3ClientBuilder
import com.amazonaws.services.s3.model.PutObjectRequest

class S3Client(accessKey: String, secretKey: String, endpoint: String, region: String) {
  private val credentials = new BasicAWSCredentials(accessKey, secretKey)
  private val s3Client: AmazonS3 = AmazonS3ClientBuilder.standard()
    .withEndpointConfiguration(new AwsClientBuilder.EndpointConfiguration(endpoint, region))
    .withCredentials(new AWSStaticCredentialsProvider(credentials))
    .withPathStyleAccessEnabled(true) // For custom endpoints
    .build()

  def uploadDirectory(bucketName: String, dirPath: String, s3BasePath: String = ""): Unit = {
    val directory = new File(dirPath)
    if (!directory.exists() || !directory.isDirectory) {
      throw new IllegalArgumentException(s"$dirPath is not a valid directory")
    }

    directory.listFiles().foreach { file =>
      if (file.isDirectory) {
        uploadDirectory(bucketName, file.getAbsolutePath, s3BasePath + file.getName + "/")
      } else {
        uploadFile(bucketName, file, s3BasePath)
      }
    }
  }

  private def uploadFile(bucketName: String, file: File, s3BasePath: String): Unit = {
    val s3Key = s3BasePath + file.getName
    val putRequest = new PutObjectRequest(bucketName, s3Key, file)
    s3Client.putObject(putRequest)
    println(s"Uploaded: $s3Key")
  }
}

// 示例用法
object S3Uploader {
  def main(args: Array[String]): Unit = {
    val accessKey = "YOUR_ACCESS_KEY"
    val secretKey = "YOUR_SECRET_KEY"
    val endpoint = "YOUR_CUSTOM_ENDPOINT"
    val region = "YOUR_REGION"
    val bucketName = "YOUR_BUCKET_NAME"
    val directoryPath = "YOUR_DIRECTORY_PATH"

    val s3Client = new S3Client(accessKey, secretKey, endpoint, region)
    s3Client.uploadDirectory(bucketName, directoryPath)
  }
}
